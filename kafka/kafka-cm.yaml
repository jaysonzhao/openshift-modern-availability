apiVersion: v1
items:

- apiVersion: v1
  data:
    advertised-hostnames.config: PLAIN_9092_0://my-cluster-kafka-0.my-cluster-kafka-brokers.stream-test.svc PLAIN_9092_1://my-cluster-kafka-1.my-cluster-kafka-brokers.stream-test.svc PLAIN_9092_2://my-cluster-kafka-2.my-cluster-kafka-brokers.stream-test.svc TLS_9093_0://my-cluster-kafka-0.my-cluster-kafka-brokers.stream-test.svc TLS_9093_1://my-cluster-kafka-1.my-cluster-kafka-brokers.stream-test.svc TLS_9093_2://my-cluster-kafka-2.my-cluster-kafka-brokers.stream-test.svc
    advertised-ports.config: PLAIN_9092_0://9092 PLAIN_9092_1://9092 PLAIN_9092_2://9092 TLS_9093_0://9093 TLS_9093_1://9093 TLS_9093_2://9093
    listeners.config: PLAIN_9092 TLS_9093
    log4j.properties: |
      # Do not change this generated file. Logging can be configured in the corresponding Kubernetes resource.
      log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
      log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
      log4j.appender.CONSOLE.layout.ConversionPattern=%d{ISO8601} %p %m (%c) [%t]%n
      kafka.root.logger.level=INFO
      log4j.rootLogger=${kafka.root.logger.level}, CONSOLE
      log4j.logger.org.I0Itec.zkclient.ZkClient=INFO
      log4j.logger.org.apache.zookeeper=INFO
      log4j.logger.kafka=INFO
      log4j.logger.org.apache.kafka=INFO
      log4j.logger.kafka.request.logger=WARN, CONSOLE
      log4j.logger.kafka.network.Processor=OFF
      log4j.logger.kafka.server.KafkaApis=OFF
      log4j.logger.kafka.network.RequestChannel$=WARN
      log4j.logger.kafka.controller=TRACE
      log4j.logger.kafka.log.LogCleaner=INFO
      log4j.logger.state.change.logger=TRACE
      log4j.logger.kafka.authorizer.logger=INFO
    server.config: |-
      ##############################
      ##############################
      # This file is automatically generated by the Strimzi Cluster Operator
      # Any changes to this file will be ignored and overwritten!
      ##############################
      ##############################

      ##########
      # Broker ID
      ##########
      broker.id=${STRIMZI_BROKER_ID}

      ##########
      # Zookeeper
      ##########
      zookeeper.connect=my-cluster-zookeeper-client:2181
      zookeeper.clientCnxnSocket=org.apache.zookeeper.ClientCnxnSocketNetty
      zookeeper.ssl.client.enable=true
      zookeeper.ssl.keystore.location=/tmp/kafka/cluster.keystore.p12
      zookeeper.ssl.keystore.password=${CERTS_STORE_PASSWORD}
      zookeeper.ssl.keystore.type=PKCS12
      zookeeper.ssl.truststore.location=/tmp/kafka/cluster.truststore.p12
      zookeeper.ssl.truststore.password=${CERTS_STORE_PASSWORD}
      zookeeper.ssl.truststore.type=PKCS12

      ##########
      # Kafka message logs configuration
      ##########
      log.dirs=/var/lib/kafka/data/kafka-log${STRIMZI_BROKER_ID}

      ##########
      # Replication listener
      ##########
      listener.name.replication-9091.ssl.keystore.location=/tmp/kafka/cluster.keystore.p12
      listener.name.replication-9091.ssl.keystore.password=${CERTS_STORE_PASSWORD}
      listener.name.replication-9091.ssl.keystore.type=PKCS12
      listener.name.replication-9091.ssl.truststore.location=/tmp/kafka/cluster.truststore.p12
      listener.name.replication-9091.ssl.truststore.password=${CERTS_STORE_PASSWORD}
      listener.name.replication-9091.ssl.truststore.type=PKCS12
      listener.name.replication-9091.ssl.client.auth=required

      ##########
      # Listener configuration: PLAIN-9092
      ##########

      ##########
      # Listener configuration: TLS-9093
      ##########
      listener.name.tls-9093.ssl.keystore.location=/tmp/kafka/cluster.keystore.p12
      listener.name.tls-9093.ssl.keystore.password=${CERTS_STORE_PASSWORD}
      listener.name.tls-9093.ssl.keystore.type=PKCS12


      ##########
      # Common listener configuration
      ##########
      listeners=REPLICATION-9091://0.0.0.0:9091,PLAIN-9092://0.0.0.0:9092,TLS-9093://0.0.0.0:9093
      advertised.listeners=REPLICATION-9091://my-cluster-kafka-${STRIMZI_BROKER_ID}.my-cluster-kafka-brokers.stream-test.svc:9091,PLAIN-9092://${STRIMZI_PLAIN_9092_ADVERTISED_HOSTNAME}:${STRIMZI_PLAIN_9092_ADVERTISED_PORT},TLS-9093://${STRIMZI_TLS_9093_ADVERTISED_HOSTNAME}:${STRIMZI_TLS_9093_ADVERTISED_PORT}
      listener.security.protocol.map=REPLICATION-9091:SSL,PLAIN-9092:PLAINTEXT,TLS-9093:SSL
      inter.broker.listener.name=REPLICATION-9091
      sasl.enabled.mechanisms=
      ssl.secure.random.implementation=SHA1PRNG
      ssl.endpoint.identification.algorithm=HTTPS

      ##########
      # User provided configuration
      ##########
      inter.broker.protocol.version=2.7
      log.message.format.version=2.7
      offsets.topic.replication.factor=3
      transaction.state.log.min.isr=2
      transaction.state.log.replication.factor=3
  kind: ConfigMap
  metadata:
    creationTimestamp: "2021-06-02T14:29:54Z"
    labels:
      app.kubernetes.io/instance: my-cluster
      app.kubernetes.io/managed-by: strimzi-cluster-operator
      app.kubernetes.io/name: kafka
      app.kubernetes.io/part-of: strimzi-my-cluster
      strimzi.io/cluster: my-cluster
      strimzi.io/kind: Kafka
      strimzi.io/name: strimzi
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:advertised-hostnames.config: {}
          f:advertised-ports.config: {}
          f:listeners.config: {}
          f:log4j.properties: {}
          f:server.config: {}
        f:metadata:
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:strimzi.io/cluster: {}
            f:strimzi.io/kind: {}
            f:strimzi.io/name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"7496fd6c-d293-471d-92c7-f37c5d19cbe1"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
      manager: okhttp
      operation: Update
      time: "2021-06-02T14:29:54Z"
    name: my-cluster-kafka-config
    namespace: stream-test
    ownerReferences:
    - apiVersion: kafka.strimzi.io/v1beta1
      blockOwnerDeletion: false
      controller: false
      kind: Kafka
      name: my-cluster
      uid: 7496fd6c-d293-471d-92c7-f37c5d19cbe1
    resourceVersion: "88077076"
    selfLink: /api/v1/namespaces/stream-test/configmaps/my-cluster-kafka-config
    uid: 2b64737e-13d8-4868-93f9-5ba1072d5c85
- apiVersion: v1
  data:
    log4j.properties: |
      # Do not change this generated file. Logging can be configured in the corresponding Kubernetes resource.
      log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
      log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
      log4j.appender.CONSOLE.layout.ConversionPattern=%d{ISO8601} %p %m (%c) [%t]%n
      zookeeper.root.logger=INFO
      log4j.rootLogger=${zookeeper.root.logger}, CONSOLE
    zookeeper.node-count: "3"
  kind: ConfigMap
  metadata:
    creationTimestamp: "2021-06-02T14:29:04Z"
    labels:
      app.kubernetes.io/instance: my-cluster
      app.kubernetes.io/managed-by: strimzi-cluster-operator
      app.kubernetes.io/name: zookeeper
      app.kubernetes.io/part-of: strimzi-my-cluster
      strimzi.io/cluster: my-cluster
      strimzi.io/kind: Kafka
      strimzi.io/name: strimzi
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:log4j.properties: {}
          f:zookeeper.node-count: {}
        f:metadata:
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:strimzi.io/cluster: {}
            f:strimzi.io/kind: {}
            f:strimzi.io/name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"7496fd6c-d293-471d-92c7-f37c5d19cbe1"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
      manager: okhttp
      operation: Update
      time: "2021-06-02T14:29:04Z"
    name: my-cluster-zookeeper-config
    namespace: stream-test
    ownerReferences:
    - apiVersion: kafka.strimzi.io/v1beta1
      blockOwnerDeletion: false
      controller: false
      kind: Kafka
      name: my-cluster
      uid: 7496fd6c-d293-471d-92c7-f37c5d19cbe1
    resourceVersion: "88076199"
    selfLink: /api/v1/namespaces/stream-test/configmaps/my-cluster-zookeeper-config
    uid: e8fa749f-00cf-4781-a092-a896f85354cf
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
