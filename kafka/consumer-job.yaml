apiVersion: batch/v1
kind: Job
metadata:
  name: kafka-consumer
spec:
  parallelism: ${consumer_number}
  template:
    metadata:
      label:
        app: kafka-consumer
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - kafka-consumer
              topologyKey: topology.kubernetes.io/host      
      containers:
      - imagePullPolicy: Always                                          
        image: bitnami/kafka:2.8.0
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name        
        command:
        - /bin/bash
        - -ecx 
        - | 
          cp /config/consumer.properties /tmp/consumer.properties
          echo group.instance.id=$${empty_variable}{POD_NAME} >> /tmp/consumer.properties
          /opt/bitnami/kafka/bin/kafka-consumer-perf-test.sh --bootstrap-server kafka.kafka.svc.cluster.local:9093 --consumer.config /tmp/consumer.properties --topic test-topic --messages ${record_number} --group test-consumer --timeout 60000 --show-detailed-stats 
        name: tool
        volumeMounts:
        - mountPath: /certs
          name: certs     
        - mountPath: /config
          name: config                 
      volumes:
      - name: certs
        secret:
          secretName: kafka-tls
      - name: config
        configMap:
          name: kafka-tool-config
      restartPolicy: Never    
  backoffLimit: 1