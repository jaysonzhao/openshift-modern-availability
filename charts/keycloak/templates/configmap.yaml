apiVersion: v1
kind: ConfigMap
metadata:
  name: application-properties
data:
  keycloak.properties: |
    #quarkus.log.level = DEBUG
    quarkus.log.category."org.jboss.resteasy.resteasy_jaxrs.i18n".level=WARN
    quarkus.log.category."org.infinispan.transaction.lookup.JBossStandaloneJTAManagerLookup".level=WARN

    quarkus.package.output-name=keycloak
    quarkus.package.output-directory=lib
    quarkus.package.user-providers-directory=../providers
    quarkus.package.main-class=keycloak

    quarkus.http.root-path=/
    quarkus.application.name=Keycloak
    quarkus.banner.enabled=false

    spi.hostname.default.frontend-url.enabled=true
    hostname-frontend-url=https://keycloak.{{ .Values.global_base_domain }}

    # Disable health checks from extensions, since we provide our own (default is true)
    quarkus.health.extensions.enabled=false

    # Default transaction timeout
    quarkus.transaction-manager.default-transaction-timeout=300

    #
    # The HTTP port
    #
    # http.enabled=false
    https.port=8443
    # quarkus.http.ssl-port=8443

    # quarkus.http.port=8443
    quarkus.http.insecure-requests=disabled

    # kc.https.certificate.file=/certs/tls.crt
    # kc.https.certificate.key=/certs/tls.key
    # https.certificate.file=/certs/tls.crt
    # https.certificate.key=/certs/tls.key
    # quarkus.http.ssl.certificate.file=/certs/tls.crt
    # quarkus.http.ssl.certificate.key-file=/certs/tls.key

    https.certificate.key-store-password=changeit
    # https.certificate.key-store-file=/certs/keystore.jks
    https.certificate.key-store-file=/certs/keystore.p12
    
    %dev.http.enabled=true
    %dev.db.username = sa
    %dev.db.password = keycloak
    %dev.cluster=local
    %dev.db=h2-file
    
    #Datasource
    # quarkus.datasource.db-kind=postgresql
    # quarkus.datasource.jdbc.url=jdbc:postgresql://postgresql/keycloak
    # quarkus.datasource.username=raffa
    # quarkus.datasource.password=raffa



    db=postgres
    #db.url.host=postgresql-rw.keycloak.svc
    #jdbc:postgresql://yb-tservers-service.yugabyte.svc:5433/yugabyte?ssl=true&amp;sslmode=require&amp;sslrootcert=/certs/ca.crt&amp;sslcert=/certs/tls.crt&amp;sslkey=/certs/key.pk8&amp;sslpassword=changeit
    db.url=jdbc:postgresql://cockroachdb-public.cockroachdb.svc:26257/keycloak?ssl=true&sslmode=require&sslrootcert=/certs/ca.crt&sslcert=/certs/tls.crt&sslkey=/certs/keystore.p12&sslpassword=changeit
    #db.url.database=keycloak
    # db.url.properties=?username=raffa&password=raffa
    #db.username=postgres
    #db.password=8FfLp92AHUFs7n7dmQri7YpeEOEVEj87DECzzN7sXmCoMLUEiPkNAAdXwl8tRBUG
    db.username=dba
    db.password=dba

  cluster-local.xml: |
    <?xml version="1.0" encoding="UTF-8"?>
    <!--
      ~ Copyright 2019 Red Hat, Inc. and/or its affiliates
      ~ and other contributors as indicated by the @author tags.
      ~
      ~ Licensed under the Apache License, Version 2.0 (the "License");
      ~ you may not use this file except in compliance with the License.
      ~ You may obtain a copy of the License at
      ~
      ~ http://www.apache.org/licenses/LICENSE-2.0
      ~
      ~ Unless required by applicable law or agreed to in writing, software
      ~ distributed under the License is distributed on an "AS IS" BASIS,
      ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      ~ See the License for the specific language governing permissions and
      ~ limitations under the License.
      -->

    <infinispan
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="urn:infinispan:config:11.0 http://www.infinispan.org/schemas/infinispan-config-11.0.xsd"
            xmlns="urn:infinispan:config:11.0">

        <cache-container name="keycloak">
            <local-cache name="default">
                <transaction transaction-manager-lookup="org.infinispan.transaction.lookup.JBossStandaloneJTAManagerLookup"/>
            </local-cache>
            <local-cache name="realms">
                <encoding>
                    <key media-type="application/x-java-object"/>
                    <value media-type="application/x-java-object"/>
                </encoding>
                <memory storage="HEAP" max-count="10000"/>
            </local-cache>
            <local-cache name="users">
                <encoding>
                    <key media-type="application/x-java-object"/>
                    <value media-type="application/x-java-object"/>
                </encoding>
                <memory storage="HEAP" max-count="10000"/>
            </local-cache>
            <local-cache name="sessions"/>
            <local-cache name="authenticationSessions"/>
            <local-cache name="offlineSessions"/>
            <local-cache name="clientSessions"/>
            <local-cache name="offlineClientSessions"/>
            <local-cache name="loginFailures"/>
            <local-cache name="work"/>
            <local-cache name="authorization">
                <encoding>
                    <key media-type="application/x-java-object"/>
                    <value media-type="application/x-java-object"/>
                </encoding>
                <memory storage="HEAP" max-count="10000"/>
            </local-cache>
            <local-cache name="keys">
                <encoding>
                    <key media-type="application/x-java-object"/>
                    <value media-type="application/x-java-object"/>
                </encoding>
                <expiration max-idle="3600000"/>
                <memory storage="HEAP" max-count="10000"/>
            </local-cache>
            <local-cache name="actionTokens">
                <encoding>
                    <key media-type="application/x-java-object"/>
                    <value media-type="application/x-java-object"/>
                </encoding>
                <expiration max-idle="-1" interval="300000"/>
                <memory storage="HEAP" max-count="-1"/>
            </local-cache>
        </cache-container>
    </infinispan>

  cluster-default.xml: | 
    <?xml version="1.0" encoding="UTF-8"?>
    <!--
      ~ Copyright 2019 Red Hat, Inc. and/or its affiliates
      ~ and other contributors as indicated by the @author tags.
      ~
      ~ Licensed under the Apache License, Version 2.0 (the "License");
      ~ you may not use this file except in compliance with the License.
      ~ You may obtain a copy of the License at
      ~
      ~ http://www.apache.org/licenses/LICENSE-2.0
      ~
      ~ Unless required by applicable law or agreed to in writing, software
      ~ distributed under the License is distributed on an "AS IS" BASIS,
      ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      ~ See the License for the specific language governing permissions and
      ~ limitations under the License.
      -->

    <infinispan
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="urn:infinispan:config:11.0 http://www.infinispan.org/schemas/infinispan-config-11.0.xsd"
            xmlns="urn:infinispan:config:11.0">
        <jgroups>
            <!-- Defines a custom JGroups stack named "prod". -->
            <stack name="prod">
            <TCP_NIO2 bind_port="7800" port_range="30" recv_buf_size="20000000" send_buf_size="640000"/>
            <TCPPING 
                initial_hosts="
{{- $fullname := "keycloak" -}}
{{- $namespace := .Release.Namespace  -}}
{{- $replicas := .Values.replicas }}
{{- $values := .Values }}
{{- range .Values.clusterNames }}
{{- $cluster:= . }}    
{{- range until (int $replicas) }}
{{- if and (eq . (sub $replicas 1) )  (eq $cluster (index $values.clusterNames (sub (len $values.clusterNames) 1) )) -}}
                {{ $fullname }}-{{ . }}.{{ $cluster }}.{{ $fullname }}.{{ $namespace }}.svc.clusterset.local[7800]
{{- else -}}
                {{ $fullname }}-{{ . }}.{{ $cluster }}.{{ $fullname }}.{{ $namespace }}.svc.clusterset.local[7800],
{{- end -}}                                
{{- end -}}
{{- end -}}
                "
                port_range="0"
                />            
            <!-- <MPING break_on_coord_rsp="true"
                    mcast_addr="${jgroups.mping.mcast_addr:228.2.4.6}"
                    mcast_port="${jgroups.mping.mcast_port:43366}"
                    num_discovery_runs="3"
                    ip_ttl="${jgroups.udp.ip_ttl:2}"/> -->
            <MERGE3 />
            <FD_SOCK />
            <FD_ALL timeout="3000" interval="1000" timeout_check_interval="1000" />
            <VERIFY_SUSPECT timeout="1000" />
            <!-- <SYM_ENCRYPT keystore_name="/certs/keystore.p12" 
                keystore_type="PKCS12" 
                store_password="changeit"/> -->
            <!-- <SSL_KEY_EXCHANGE keystore_name="/certs/keystore.jks"
                        keystore_password="changeit"/>                
            <ASYM_ENCRYPT asym_keylength="2048"
                    asym_algorithm="RSA"
                    change_key_on_coord_leave = "false"
                    change_key_on_leave = "false"
                    use_external_key_exchange = "true"/> -->            
            <pbcast.NAKACK2 use_mcast_xmit="false" xmit_interval="200"
                            max_xmit_req_size="500" xmit_table_num_rows="50"
                            xmit_table_msgs_per_row="1024" xmit_table_max_compaction_time="30000" />
            <UNICAST3 xmit_interval="200" max_xmit_req_size="500"
                        xmit_table_num_rows="50" xmit_table_msgs_per_row="1024"
                        xmit_table_max_compaction_time="30000" />
            <pbcast.STABLE stability_delay="200" desired_avg_gossip="2000" max_bytes="1M" />
            <pbcast.GMS print_local_addr="false" join_timeout="${jgroups.join_timeout:2000}" />
            <UFC max_credits="4m" min_threshold="0.40" />
            <MFC max_credits="4m" min_threshold="0.40" />
            <FRAG3 />
            </stack>
        </jgroups>
        <cache-container name="keycloak">
            <transport cluster="keycloak.{{ .Release.Namespace }}"
                stack="prod"
                node-name="${env.POD_NAME}.${env.CLUSTER_NAME}.keycloak.{{ .Release.Namespace }}.svc.clusterset.local"
                lock-timeout="60000"/>
            <local-cache name="realms">
                <encoding>
                    <key media-type="application/x-java-object"/>
                    <value media-type="application/x-java-object"/>
                </encoding>
                <memory storage="HEAP" max-count="10000"/>
            </local-cache>
            <local-cache name="users">
                <encoding>
                    <key media-type="application/x-java-object"/>
                    <value media-type="application/x-java-object"/>
                </encoding>
                <memory storage="HEAP" max-count="10000"/>
            </local-cache>
            <distributed-cache name="sessions" owners="1"/>
            <distributed-cache name="authenticationSessions" owners="1"/>
            <distributed-cache name="offlineSessions" owners="1"/>
            <distributed-cache name="clientSessions" owners="1"/>
            <distributed-cache name="offlineClientSessions" owners="1"/>
            <distributed-cache name="loginFailures" owners="1"/>
            <local-cache name="authorization">
                <encoding>
                    <key media-type="application/x-java-object"/>
                    <value media-type="application/x-java-object"/>
                </encoding>
                <memory storage="HEAP" max-count="10000"/>
            </local-cache>
            <replicated-cache name="work"/>
            <local-cache name="keys">
                <encoding>
                    <key media-type="application/x-java-object"/>
                    <value media-type="application/x-java-object"/>
                </encoding>
                <expiration max-idle="3600000"/>
                <memory storage="HEAP" max-count="1000"/>
            </local-cache>
            <distributed-cache name="actionTokens" owners="2">
                <encoding>
                    <key media-type="application/x-java-object"/>
                    <value media-type="application/x-java-object"/>
                </encoding>
                <expiration max-idle="-1" interval="300000"/>
                <memory storage="HEAP" max-count="-1"/>
            </distributed-cache>
        </cache-container>
    </infinispan> 