apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
spec:
  podManagementPolicy: Parallel
  replicas: {{ .Values.kafka.replicas }}
  selector:
    matchLabels:
      app: kafka
  serviceName: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
      - env:
        - name: KAFKA_MOUNTED_CONF_DIR
          value: /config
        - name: KAFKA_CFG_LISTENERS
          value: BROKER://:9091,CONTROLLER://:9092,CLIENT://:9093
        - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
          value: BROKER:SSL,CONTROLLER:SSL,CLIENT:SSL
        - name: KAFKA_ZOOKEEPER_PROTOCOL
          value: SSL    
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name                                       
        image: bitnami/kafka
        command:
        - /bin/bash
        - -ecx
        - | 
          export KAFKA_CFG_ADVERTISED_LISTENERS=BROKER://${POD_NAME}.{{ .Values.cluster }}.kafka.{{ .Release.Namespace }}.svc.clusterset.local:9091,CONTROLLER://${POD_NAME}.{{ .Values.cluster }}.kafka.{{ .Release.Namespace }}.svc.clusterset.local:9092,CLIENT://${POD_NAME}.{{ .Values.cluster }}.kafka.{{ .Release.Namespace }}.svc.clusterset.local:9093
          /opt/bitnami/scripts/kafka/entrypoint.sh /opt/bitnami/scripts/kafka/run.sh
        name: kafka
        ports:
        - containerPort: 9091
          name: broker-tls
          protocol: TCP
        - containerPort: 9092
          name: controller-tls
          protocol: TCP
        - containerPort: 9093
          name: client-tls
          protocol: TCP
        volumeMounts:
        - mountPath: /bitnami/kafka
          name: data
        - mountPath: /config
          name: config
        - mountPath: /certs
          name: certs
        - mountPath: /config/certs
          name: projected-certs          
      volumes:
      - name: certs
        secret:
          secretName: kafka-tls      
      - name: projected-certs
        secret:
          secretName: kafka-tls
          items:
          - key: truststore.jks
            path: zookeeper.truststore.jks
          - key: truststore.jks
            path: kafka.truststore.jks
          - key: keystore.jks
            path: kafka.keystore.jks     
          - key: keystore.jks
            path: zookeeper.keystore.jks                     
      - name: config
        configMap:
          name: kafka-config
  updateStrategy:
    type: OnDelete
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi     