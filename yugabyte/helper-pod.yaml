kind: BuildConfig
apiVersion: build.openshift.io/v1
metadata:
  name: tpcc-runner-pom-build
spec:
  source:
    git: 
      uri: "https://github.com/yugabyte/tpcc"
      ref: "failurefix"
  strategy:
    sourceStrategy:
      from:
        kind: "ImageStreamTag"
        name: "ubi8-openjdk-11:1.3"
        namespace: openshift
  output: 
    to:
      kind: "ImageStreamTag"
      name: "tpccbenchmark:1.5"      
---
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  name: tpccbenchmark
spec: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tpccbenchmark-helper-pod
spec:
  selector:
    matchLabels:
      app: tpccbenchmark
  template:
    metadata:
      labels:
        app: tpccbenchmark
    spec:
      containers:
      - command:
        - /bin/bash
        - -c
        - sleep infinity
        image:  image-registry.openshift-image-registry.svc:5000/${namespace}/tpccbenchmark:1.5
        imagePullPolicy: Always
        name: tpccbenchmark
        volumeMounts:
        - name: workload-config
          mountPath: /workload-config
        - name: certs
          mountPath: /certs
      volumes:
      - name: workload-config
        configMap:
          name: workload-config
      - name: certs
        secret:
          secretName: yugabyte-tls-client-cert       
---
  #        <jdbcURL>jdbc:postgresql://yb-tservers.yugabyte.svc:5433/yugabyte?sslrootcert=/certs/ca.crt&ssl=true</jdbcURL>
kind: ConfigMap
apiVersion: v1
metadata:
  name: workload-config
data:
  workload.xml: | 
    <?xml version="1.0"?>
    <parameters>
        <dbtype>postgres</dbtype>
        <driver>org.postgresql.Driver</driver>
        <!-- <jdbcURL>jdbc:postgresql://yb-tservers-service.yugabyte.svc:5433/yugabyte?ssl=true&amp;sslmode=require&amp;sslrootcert=/certs/ca.crt&amp;sslcert=/certs/tls.crt&amp;sslkey=/certs/key.pk8&amp;sslpassword=changeit</jdbcURL> -->
        <username>yugabyte</username>
        <sslCert>/certs/tls.crt</sslCert>
        <sslKey>/certs/key.pk8</sslKey>
        <DBName>yugabyte</DBName>
        <port>5433</port>
        <password>yugabyte</password>
        <isolation>TRANSACTION_REPEATABLE_READ</isolation>

        <batchSize>128</batchSize>
        <useKeyingTime>true</useKeyingTime>
        <useThinkTime>true</useThinkTime>
        <enableForeignKeysAfterLoad>true</enableForeignKeysAfterLoad>
        <hikariConnectionTimeoutMs>180000</hikariConnectionTimeoutMs>
        <useStoredProcedures>true</useStoredProcedures>
        <displayEnhancedLatencyMetrics>false</displayEnhancedLatencyMetrics>
        <trackPerSQLStmtLatencies>false</trackPerSQLStmtLatencies>

        <transactiontypes>
            <transaction>
                <name>NewOrder</name>
                <weight>45</weight>
            </transaction>
            <transaction>
                <name>Payment</name>
                <weight>43</weight>
            </transaction>
            <transaction>
                <name>OrderStatus</name>
                <weight>4</weight>
            </transaction>
            <transaction>
                <name>Delivery</name>
                <weight>4</weight>
            </transaction>
            <transaction>
                <name>StockLevel</name>
                <weight>4</weight>
            </transaction>
        </transactiontypes>

        <runtime>3600</runtime>
        <rate>10000</rate>
        <!--
          Set the number of retries to 0 as retrying when the number of warehouses is
          high is pointless as it just leads to more failures.
        -->
        <maxRetriesPerTransaction>5</maxRetriesPerTransaction>
        <maxLoaderRetries>5</maxLoaderRetries>
        
    </parameters>
  log4j.properties: | 
    # Set root logger level to DEBUG and its only appender to A1.
    log4j.rootLogger=INFO, A1
    log4j.rootLogger.layout=org.apache.log4j.PatternLayout

    # A1 is set to be a ConsoleAppender.
    log4j.appender.A1=org.apache.log4j.ConsoleAppender
    log4j.appender.A1.layout=org.apache.log4j.PatternLayout
    log4j.appender.A1.layout.ConversionPattern=%d{ABSOLUTE} (%F:%L) %-5p - %m%n

    # API
    log4j.logger.com.oltpbenchmark=INFO
    log4j.logger.com.oltpbenchmark.api=INFO

    # Benchmarks
    log4j.logger.com.oltpbenchmark.benchmarks.tatp=INFO
    log4j.logger.com.oltpbenchmark.benchmarks.twitter=INFO
    log4j.logger.com.oltpbenchmark.benchmarks.wikipedia=INFO
    log4j.logger.com.oltpbenchmark.benchmarks.epinions=INFO
    log4j.logger.com.oltpbenchmark.benchmarks.ycsb=INFO
    log4j.logger.com.oltpbenchmark.benchmarks.seats=INFO
    log4j.logger.com.oltpbenchmark.benchmarks.linkbench=INFO
    log4j.logger.com.oltpbenchmark.benchmarks.sibench=INFO
    log4j.logger.com.oltpbenchmark.benchmarks.seats=INFO
    log4j.logger.com.oltpbenchmark.benchmarks.auctionmark=INFO
    log4j.logger.com.oltpbenchmark.benchmarks.chbenchmark=INFO

    # Loaders
    log4j.logger.com.oltpbenchmark.benchmarks.wikipedia.WikipediaLoader=INFO


    !==============================================================================
    ! log4j.properties - An example configuration properties file for log4j.
    !
    ! Logging levels are:
    ! DEBUG < INFO < WARN < ERROR < FATAL
    !==============================================================================

    ! turn on the internal log4j debugging flag so we can see what it is doing
    #log4j.debug=true

    !==============================================================================
    ! JDBC API layer call logging :
    ! INFO shows logging, DEBUG also shows where in code the jdbc calls were made,
    ! setting DEBUG to true might cause minor slow-down in some environments.
    ! If you experience too much slowness, use INFO instead.

    ! Log only the SQL that is executed.
    log4j.logger.jdbc.sqlonly=DEBUG,A1
    log4j.additivity.jdbc.sqlonly=false
  geopartitioned_workload.xml: |
    <?xml version="1.0"?>
    <parameters>
        <enableGeoPartitionedWorkload>false</enableGeoPartitionedWorkload>
        <numberOfPartitions>2</numberOfPartitions>
        <tablespaces>
            <tablespace>
                <name>tablespace0</name>
                <storeItemTable>true</storeItemTable>
                <storePartitionedTables>true</storePartitionedTables>
                <storePartitions>false</storePartitions>
                <replicationFactor>1</replicationFactor>
                <placementPolicy>
                    <placementBlock>
                        <cloud>aws</cloud>
                        <region>us-west-2</region>
                        <zone>us-west-2a0</zone>
                        <minReplicationFactor>1</minReplicationFactor>
                    </placementBlock>
                </placementPolicy>
            </tablespace>
            <tablespace>
                <name>tablespace1</name>
                <replicationFactor>1</replicationFactor>
                <storePartitions>true</storePartitions>
                <placementPolicy>
                    <placementBlock>
                        <cloud>aws</cloud>
                        <region>us-west-2</region>
                        <zone>us-west-2a1</zone>
                        <minReplicationFactor>1</minReplicationFactor>
                    </placementBlock>
                </placementPolicy>
            </tablespace>
            <tablespace>
                <name>tablespace2</name>
                <storePartitions>true</storePartitions>
                <replicationFactor>1</replicationFactor>
                <placementPolicy>
                    <placementBlock>
                        <cloud>aws</cloud>
                        <region>us-west-2</region>
                        <zone>us-west-2a2</zone>
                        <minReplicationFactor>1</minReplicationFactor>
                    </placementBlock>
                </placementPolicy>
            </tablespace>
        </tablespaces>
    </parameters>    
---
kind: Service
apiVersion: v1
metadata:
  name: yb-tservers-service
spec:
  ports:
    - name: http-ui
      protocol: TCP
      port: 9000
      targetPort: 9000
    - name: http-ycql-met
      protocol: TCP
      port: 12000
      targetPort: 12000
    - name: http-yedis-met
      protocol: TCP
      port: 11000
      targetPort: 11000
    - name: http-ysql-met
      protocol: TCP
      port: 13000
      targetPort: 13000
    - name: tcp-rpc-port
      protocol: TCP
      port: 9100
      targetPort: 9100
    - name: tcp-yedis-port
      protocol: TCP
      port: 6379
      targetPort: 6379
    - name: tcp-yql-port
      protocol: TCP
      port: 9042
      targetPort: 9042
    - name: tcp-ysql-port
      protocol: TCP
      port: 5433
      targetPort: 5433
  selector:
    app: yb-tserver
  type: ClusterIP
  sessionAffinity: None



